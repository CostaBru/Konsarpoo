name: Konsarpoo coverage

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
 
jobs:
  build:
    runs-on: windows-latest
    steps:

      - uses: actions/checkout@v4
      - name: Setup .NET 6.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'
      - name: Setup .NET 7.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'
      - name: Restore dependencies
        run: dotnet restore
      # On Windows, we can use NuGet.exe directly
      - name: Setup NuGet.exe for use with actions
        uses: NuGet/setup-nuget@v1.2.0
      - name: Restore with NuGet
        run: nuget restore Konsarpoo.sln
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-build --configuration Release --no-restore --logger "trx;LogFileName=test-results-windows.trx"
      - name: Publish test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-windows
          path: D:\a\Konsarpoo\Konsarpoo\Konsarpoo.Tests\TestResults
      # Coverage using Microsoft dotnet-coverage and ReportGenerator
      - name: Install coverage tools
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet tool install --global dotnet-reportgenerator-globaltool
      - name: Add .NET tools to PATH
        shell: pwsh
        run: echo "$env:USERPROFILE\.dotnet\tools" >> $env:GITHUB_PATH
      - name: Ensure coverage output directory exists
        shell: pwsh
        run: New-Item -ItemType Directory -Force -Path CoverageReport | Out-Null
      - name: Collect coverage (Cobertura)
        run: dotnet-coverage collect "dotnet test --no-build --configuration Release --no-restore" -f cobertura -o "CoverageReport/coverage.cobertura.xml"
      - name: Generate HTML coverage report
        run: reportgenerator -reports:"CoverageReport/coverage.cobertura.xml" -targetdir:"CoverageReport" -reporttypes:"Html;HtmlSummary"
      - name: Normalize coverage report filename for badge script
        shell: pwsh
        run: |
          if (Test-Path "CoverageReport/Summary.html") { Copy-Item "CoverageReport/Summary.html" "CoverageReport/Konsarpoo.CoverageReport.html" -Force } 
          elseif (Test-Path "CoverageReport/index.html") { Copy-Item "CoverageReport/index.html" "CoverageReport/Konsarpoo.CoverageReport.html" -Force }
      - name: Publish test coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-windows
          path: D:\a\Konsarpoo\Konsarpoo\CoverageReport
      - name: Write test coverage to env variable
        run:  python D:\a\Konsarpoo\Konsarpoo\Coverage\coverageToEnv.py D:\a\Konsarpoo\Konsarpoo\CoverageReport\Konsarpoo.CoverageReport.html
      - name: Create the Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 53438eb82c2cc9b70de34df4f14a7072
          filename: Konsarpoo__head.json
          label: Test Coverage
          message: ${{ env.COVERAGE }}
          color: green
          namedLogo: Konsarpoo